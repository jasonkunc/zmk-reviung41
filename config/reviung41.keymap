/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define DEFAULT 0
#define NAVI    1
#define NUMB    2
#define PUNK    3
#define ADJ     4

&mt { tapping-term-ms = <1500>; };

/ {
    behaviors {
        hrml: hrml {
            compatible = "zmk,behavior-hold-tap";
            label = "HRML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
            hold-trigger-key-positions = <13 14 15 12>;
            quick-tap-ms = <145>;
            flavor = "balanced";
            hold-trigger-on-release;
        };

        hrmr: hrmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HRMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
            quick-tap-ms = <145>;
            hold-trigger-key-positions = <20 21 22>;
            flavor = "balanced";
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |                     |  Y  |  U   |  I  |  O  |  P  |   BKSP    |
            // | hyper/ESC |  ctrl A  |  alt S  |  gui D  |  F  |  G  |   |  H  |  J   |  gui K  |  alt L  |  ctrl ;  |  '  |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |                     |  N  |  M   |  ,  |  .  |  /  | SHFT(RET) |
            //                         | gui | navi     | SPC         | layer2  | layer4 |

            bindings = <
&kp TAB                    &kp Q               &kp W       &kp E       &kp R     &kp T             &kp Y  &kp U     &kp I       &kp O       &kp P           &kp BSPC
&mt LG(LS(LA(LCTRL))) ESC  &mt LEFT_CONTROL A  &mt LALT S  &mt LGUI D  &kp F     &kp G             &kp H  &kp J     &mt RGUI K  &mt RALT L  &mt RCTRL SEMI  &kp SQT
&kp LSHFT                  &kp Z               &kp X       &kp C       &kp V     &kp B             &kp N  &kp M     &kp COMMA   &kp DOT     &kp FSLH        &kp RETURN
                                                           &kp LGUI    &mo NAVI         &kp SPACE         &mo PUNK  &mo ADJ
            >;
        };

        navi_layer {
            // ----------------------------------------------------------------------------------
            // |  ` |  !  |  @  |  #  |  $  |  %  |          |  ^  |  &  |  *  |  (  |  )  |    -      |
            // |    |     |     |     |NUMB | PUNK|          | LFT | DWN |  UP | RGT |     |           |
            // | SHFT |   |     |     |     |     |          | HOME| PGDN | PGUP| END| PRSC| SHFT(RET) |
            //                        |     |     |          |     |     |

            bindings = <
&kp GRAVE  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT         &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR   &kp RPAR  &kp UNDERSCORE
&none      &none     &none   &none     &mo NUMB  &mo PUNK          &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &none     &none
&kp LSHFT  &none     &none   &none     &none     &none             &kp HOME   &kp PG_DN  &kp PG_UP  &kp END    &none     &none
                             &none     &mo NAVI             &none             &mo PUNK   &none
            >;
        };

        numb_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |     |      |      |       |       |      |      | NLCK |   7  |   8   |   9  |       |  BSPC |
            // |     |      |      |       |  NUMB | PUNK |      |      |   4  |   5   |   6  |       |       |
            // |     |      |      |       |       |      |      |      |   1  |   2   |   3  |   /   | ENTER |
            //              |      |       |       |      |      |   0  |      |       |      |

            bindings = <
&none  &none  &none  &none   &none     &none             &kp LNLCK  &kp N7  &kp N8  &kp N9  &none     &trans
&none  &none  &none  &none   &mo NUMB  &mo PUNK          &none      &kp N4  &kp N5  &kp N6  &none     &none
&none  &none  &none  &none   &none     &none             &none      &kp N1  &kp N2  &kp N3  &kp FSLH  &kp RET
                     &trans  &trans              &kp N0             &trans  &none
            >;
        };

        punk_layer {
            // -----------------------------------------------------------------------------------------
            // |    |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // |    |     |     |     |     |     |   |  +  |  {  |   } | "|" |     |      |
            // |    |     |     |     |     |     |   |  =  |  [  |   ] |  \  |     |      |
            //                       |     |     |     |    |     |

            bindings = <
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5          &kp N6     &kp N7    &kp N8    &kp N9    &kp N0  &kp MINUS
&none   &none   &none   &none   &none   &none           &kp PLUS   &kp LBRC  &kp RBRC  &kp PIPE  &none   &none
&none   &none   &none   &none   &none   &none           &kp EQUAL  &kp LBKT  &kp RBKT  &kp BSLH  &none   &none
                        &trans  &trans          &trans             &trans    &trans
            >;
        };

        adj_layer {
            // -----------------------------------------------------------------------------------------
            // | RGB BRI+ | RGB SAT+ | RGB HUE+ | RGB ANI+ |    |         |   |  BT1  | BT2 | BT3 | BT4 | BT5 | BT CLR |
            // | RGB BRI- | RGB SAT- | RGB HUE- | RGB ANI- |    |         |   |       |     |     |     |     |        |
            // |          |          |          |          |    |         |   | RESET |     |     |     |     |        |
            //                                      |     |     | RGB TOG |     |     |

            bindings = <
&rgb_ug RGB_BRI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_EFF  &none   &rgb_ug RGB_TOG                   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
&rgb_ug RGB_BRD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_EFR  &none   &none                             &none         &none         &none         &none         &none         &none
&none            &none            &none            &none            &none   &none                             &sys_reset    &none         &none         &none         &none         &none
                                                   &trans           &trans                   &rgb_ug RGB_TOG                &trans        &trans
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans          &trans          &trans  &trans
            >;
        };
    };
};
